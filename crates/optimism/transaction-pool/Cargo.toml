[package]
name = "reth-optimism-transaction-pool"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true

[lints]
workspace = true

[dependencies]
# reth
reth-chainspec.workspace = true
reth-node-api.workspace = true
reth-primitives = { workspace = true, features = ["serde-bincode-compat"] }
reth-primitives-traits.workspace = true
reth-provider.workspace = true
reth-evm.workspace = true
reth-revm = { workspace = true, features = ["std"] }
reth-transaction-pool.workspace = true

# op-reth
reth-optimism-evm.workspace = true
reth-optimism-primitives = { workspace = true, features = ["serde", "serde-bincode-compat"] }
reth-optimism-forks.workspace = true

# revm with required optimism features
revm = { workspace = true, features = ["secp256k1", "blst", "c-kzg"] }

# ethereum
alloy-consensus.workspace = true
alloy-eips.workspace = true
alloy-primitives.workspace = true
alloy-rpc-types-eth.workspace = true
op-alloy-consensus.workspace = true
op-alloy-flz.workspace = true

# misc
derive_more.workspace = true
parking_lot.workspace = true

[dev-dependencies]
reth-optimism-chainspec.workspace = true
reth-provider = { workspace = true, features = ["test-utils"] }
reth-revm = { workspace = true, features = ["test-utils"] }

[features]
default = ["reth-codec", "optimism"]
optimism = [
	"reth-optimism-evm/optimism",
    "reth-optimism-primitives/optimism",
	"revm/optimism",
]
test-utils = [
	"reth-chainspec/test-utils",
	"reth-primitives/test-utils",
	"reth-primitives-traits/test-utils",
	"reth-optimism-primitives/arbitrary",
	"reth-revm/test-utils",
	"revm/test-utils",
]
reth-codec = [
    "reth-primitives/reth-codec",
    "reth-optimism-primitives/reth-codec",
]